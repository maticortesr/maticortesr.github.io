<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matias Cortes</title>
    <link>https://www.matiascortes.com/</link>
    <description>Recent content on Matias Cortes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 21 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.matiascortes.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analytics on Table Tennis Equipment Part 2: Recomendation Engine</title>
      <link>https://www.matiascortes.com/posts/table-tennis-equipment-recomendation/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.matiascortes.com/posts/table-tennis-equipment-recomendation/</guid>
      <description>After creating a text classifier on Part 1 of this series of analysis on Table Tennis equipment, there is another aspect of choosing equipment that is tricky: making sense of all the specs of rubbers. Luckily, Revspin.net has user-generated data we can use for this. Characteristics like Speed, Spin, Control, Gears, Tackyness are rated from 1 to 10 for a big number of rubbers. The issue with this is that is very hard to make sense of all those numbers, Revspin does not offer a comparison tool currently, and even if it did, typical 1-to-1 comparison toolsfall short when you want to find similar products.</description>
    </item>
    
    <item>
      <title>Analytics on Table Tennis Equipment Part 1: Text Classification</title>
      <link>https://www.matiascortes.com/posts/table-tennis-equipment-text-classification/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.matiascortes.com/posts/table-tennis-equipment-text-classification/</guid>
      <description>Table Tennis gear shopping can be a complex endeavor. When you get to the point of getting a custom racket, combining a blade + 2 Rubbers gives you pretty high number of combinations. For example, a blade can be made of wood or wood+carbon for the most part, with a variety of combinations in terms of ply (usually 5-7) and they are classified as Defensive, Offensive and All around, with many levels in between.</description>
    </item>
    
    <item>
      <title>Hello</title>
      <link>https://www.matiascortes.com/posts/hello/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.matiascortes.com/posts/hello/</guid>
      <description>This is the inaugural post of the new version of my personal website powered by Hugo and Go. The plan for this website is to become public record of projects I&amp;rsquo;m working on, a knowledge base of technical topics and my way to get into writing. Writing is Thinking I read recently, and I totally agree. Engligh is also not my native language so this blog will definetly help me to improve my english skills as well.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://www.matiascortes.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.matiascortes.com/about/</guid>
      <description>I&amp;rsquo;m a Software Developer living in the Boston area. I&amp;rsquo;m a proud generalist with experience in various areas, from being a startup founder and manage software product development; to start my career in Data Science for a Big Four US Bank; and to use my data skills to drive growth and decision-making at an energy efficiency startup.
Currently working as a Software Developer moving comfortably across the stack. Leveraging AWS, Python, Node.</description>
    </item>
    
    <item>
      <title>Portfolio</title>
      <link>https://www.matiascortes.com/portfolio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.matiascortes.com/portfolio/</guid>
      <description>Table Tennis Equipment Recommender:  Distance-based recommender engine for rubbers. Python model built using PCA and KNN, deployed into Flask API. Model API consumed with a React application.
Skills: Sklearn, Unsupervised Learning, Flask, React.js, React Boostrap, Axios React
  Text Classification on Table Tennis Rubbers:  Text Classification with Scikit-Learn. Extracted data with Selenium and hand-labeled examples to build a classifier. AUC: 0.957 and Accuracy: 0.87.
Skills: Sklearn Pipelines, Text Classification, Text Features, NLTK, Spacy</description>
    </item>
    
  </channel>
</rss>
